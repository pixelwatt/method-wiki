(self.webpackChunkmethod_docs=self.webpackChunkmethod_docs||[]).push([[8285],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return l},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=u(n),m=o,h=d["".concat(c,".").concat(m)]||d[m]||p[m]||a;return n?r.createElement(h,i(i({ref:t},l),{},{components:n})):r.createElement(h,i({ref:t},l))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var u=2;u<a;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9823:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return s},metadata:function(){return c},toc:function(){return u},default:function(){return p}});var r=n(2122),o=n(9756),a=(n(7294),n(3905)),i=["components"],s={},c={unversionedId:"method-layout/methods/determine_attributes()",id:"method-layout/methods/determine_attributes()",isDocsHomePage:!1,title:"determine_attributes()",description:"abstract protected function determine_attributes()",source:"@site/docs/method-layout/methods/determine_attributes().md",sourceDirName:"method-layout/methods",slug:"/method-layout/methods/determine_attributes()",permalink:"/method-wiki/docs/method-layout/methods/determine_attributes()",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/method-layout/methods/determine_attributes().md",version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"check_key()",permalink:"/method-wiki/docs/method-layout/methods/check_key()"},next:{title:"filter_content()",permalink:"/method-wiki/docs/method-layout/methods/filter_content()"}},u=[{value:"Example",id:"example",children:[]}],l={toc:u};function p(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"abstract protected function determine_attributes()")),(0,a.kt)("p",null,'This is an abstract method that should be included in the theme-specific layout class that extends Method_Layout. In this method, you\'ll run conditionals against properties set by the build_page() method to determine the layout components needed for specific layouts, which is stored as an array of components in the "components" key of the $attr property. This array is later used by the build_components() method to build out the HTML for set components.'),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"example"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"protected function determine_attributes() {\n    if ( true == $this->attr['is_archive'] ) {\n        switch ( $this->attr['post_type'] ) {\n            case 'post':\n                $this->attr['components'] = array( 'news-header', 'post-list' );\n                break;\n        }\n    } else {\n        switch ( $this->attr['post_type'] ) {\n            case 'page':\n                if ( $this->attr['is_front'] ) {\n                    $this->attr['components'] = array( 'front-carousel', 'front-intro' );\n                } else {\n                    $template = get_page_template_slug( $this->id );\n                    switch ( $template ) {\n                        case 'templates/page-template-services.php':\n                            $this->attr['components'] = array( 'internal-header', 'services-list' );\n                            break;\n                        default:\n                            $this->attr['components'] = array( 'internal-header', 'default-content' );\n                            break;\n                    }\n                }\n                break;\n            case 'post':\n                $this->attr['components'] = array( 'post-header', 'post-content' );\n                break;\n            default:\n                break;\n        }\n    }\n    return;\n}\n")),(0,a.kt)("p",null,"The function above would register layout components for different pages/archives, as listed below:"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://robclark.io/assets/method_wiki_images/method_reference_determine_attributes.png",alt:"Component Registration"})))}p.isMDXComponent=!0}}]);