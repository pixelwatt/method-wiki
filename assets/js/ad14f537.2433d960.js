(self.webpackChunkmethod_docs=self.webpackChunkmethod_docs||[]).push([[7742],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return m},kt:function(){return d}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},m=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),u=s(n),d=o,f=u["".concat(p,".").concat(d)]||u[d]||c[d]||i;return n?r.createElement(f,a(a({ref:t},m),{},{components:n})):r.createElement(f,a({ref:t},m))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=u;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var s=2;s<i;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},8583:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return l},metadata:function(){return p},toc:function(){return s},default:function(){return c}});var r=n(2122),o=n(9756),i=(n(7294),n(3905)),a=["components"],l={},p={unversionedId:"method-layout/methods/get_content_from_option()",id:"method-layout/methods/get_content_from_option()",isDocsHomePage:!1,title:"get_content_from_option()",description:"public function getcontentfrom_option( string $key, string $before, string $after, string $fallback = '' )",source:"@site/docs/method-layout/methods/get_content_from_option().md",sourceDirName:"method-layout/methods",slug:"/method-layout/methods/get_content_from_option()",permalink:"/method-wiki/docs/method-layout/methods/get_content_from_option()",version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"get_content()",permalink:"/method-wiki/docs/method-layout/methods/get_content()"},next:{title:"get_footer_markup()",permalink:"/method-wiki/docs/method-layout/methods/get_footer_markup()"}},s=[{value:"Arguments",id:"arguments",children:[]},{value:"Example",id:"example",children:[]}],m={toc:s};function c(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"public function get_content_from_option( string $key, string $before, string $after, string $fallback = '' )")),(0,i.kt)("p",null,"This method allows you to retrieve and filter content from the value of an option (or theme mod) key more efficiently than by using the get_option() method. Option key values, if set and not empty, are passed through the filter_content() class method, then wrapped in values provide for the $before and $after arguments. This method is most useful when handeling content entered through a TinyMCE field."),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"arguments"},"Arguments"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"$key"),(0,i.kt)("br",{parentName:"li"}),(0,i.kt)("em",{parentName:"li"},"(string)")," ",(0,i.kt)("em",{parentName:"li"},"(required)")," The option key to check and use if is set and not empty.",(0,i.kt)("br",{parentName:"li"}),""),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"$before"),(0,i.kt)("br",{parentName:"li"}),(0,i.kt)("em",{parentName:"li"},"(string)")," ",(0,i.kt)("em",{parentName:"li"},"(required)")," Markup to include before the processed value of the option key, if the option key is set and not empty, or a fallback value has been provided.",(0,i.kt)("br",{parentName:"li"}),""),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"$after"),(0,i.kt)("br",{parentName:"li"}),(0,i.kt)("em",{parentName:"li"},"(string)")," ",(0,i.kt)("em",{parentName:"li"},"(required)")," Markup to include after the processed value of the option key, if the option key is set and not empty, or a fallback value has been provided.",(0,i.kt)("br",{parentName:"li"}),""),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"$fallback"),(0,i.kt)("br",{parentName:"li"}),(0,i.kt)("em",{parentName:"li"},"(string)")," ",(0,i.kt)("em",{parentName:"li"},"(optional)")," An optional string to fallback to if the option key isn't set or is empty. If a fallback value is not provided and the option key isn't set or is empty, the method will return empty. If used, the $fallback string ",(0,i.kt)("strong",{parentName:"li"},"will not")," be passed through the filter_content() class method.\n")),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"example"},"Example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},"// Instead of this...\n$this->html .= '<div class=\"bio-wrap\">' . ( $this->get_option( 'ceo_bio' ) ? $this->filter_content( this->get_option( 'ceo_bio' ) ) : '<p>Coming Soon</p>' ) . '</div>';\n\n// You could do this...\n$this->html .= $this->get_content_from_option( 'ceo_bio', '<div class=\"bio-wrap\">', '</div>', '<p>Coming Soon</p>' );\n")))}c.isMDXComponent=!0}}]);