(self.webpackChunkmethod_docs=self.webpackChunkmethod_docs||[]).push([[4981],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return p},kt:function(){return f}});var n=r(7294);function s(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){s(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,s=function(e,t){if(null==e)return{};var r,n,s={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(s[r]=e[r]);return s}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(s[r]=e[r])}return s}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,s=e.mdxType,i=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=c(r),f=s,d=m["".concat(l,".").concat(f)]||m[f]||u[f]||i;return r?n.createElement(d,a(a({ref:t},p),{},{components:r})):n.createElement(d,a({ref:t},p))}));function f(e,t){var r=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var i=r.length,a=new Array(i);a[0]=m;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:s,a[1]=o;for(var c=2;c<i;c++)a[c]=r[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},3096:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return o},metadata:function(){return l},toc:function(){return c},default:function(){return u}});var n=r(2122),s=r(9756),i=(r(7294),r(3905)),a=["components"],o={sidebar_position:3},l={unversionedId:"other-references/gulp-tasks",id:"other-references/gulp-tasks",isDocsHomePage:!1,title:"Gulp Tasks",description:"Overview",source:"@site/docs/other-references/gulp-tasks.md",sourceDirName:"other-references",slug:"/other-references/gulp-tasks",permalink:"/method-wiki/docs/other-references/gulp-tasks",version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Helper Functions",permalink:"/method-wiki/docs/other-references/helper-functions"},next:{title:"Format Tags",permalink:"/method-wiki/docs/other-references/format-tags"}},c=[{value:"Overview",id:"overview",children:[]},{value:"Tasks",id:"tasks",children:[]}],p={toc:c};function u(e){var t=e.components,r=(0,s.Z)(e,a);return(0,i.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"overview"},"Overview"),(0,i.kt)("p",null,"This theme includes gulp tasks to assist in theme development by automating a number of different processes."),(0,i.kt)("h2",{id:"tasks"},"Tasks"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"styles"),(0,i.kt)("br",{parentName:"li"}),"This task triggers a series of tasks: ",(0,i.kt)("em",{parentName:"li"},"compile-styles")," and ",(0,i.kt)("em",{parentName:"li"},"process-styles"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"compile_styles"),(0,i.kt)("br",{parentName:"li"}),"This task compiles the theme.scss file to theme.css, and then generates a minified version, theme.min.css, in the root directory."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"process_styles"),(0,i.kt)("br",{parentName:"li"}),"This task checks the theme.css and theme.min.css files for any svg paths wrapped in inline(), and converts them into inline svgs."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"scripts"),(0,i.kt)("br",{parentName:"li"}),"This task combines core theme javascript files into a single file, assets/js/scripts, and then generates a minified version, assets/js/scripts.min.js. Scripts combined by this task can be modified by editing the array of scripts delcared at the beginning of this tasks."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"watch"),(0,i.kt)("br",{parentName:"li"}),"This task monitors .scss files in the theme and recompiles the main stylesheet (theme.css) if any of the files are modified."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"serve"),(0,i.kt)("br",{parentName:"li"}),"This task sets up a browsersync session that automatically refreshes the site when changes to theme files are detected. This requires a web serve to allready be set up. Change the proxy address in gulpfile.js to reflect your local development URL.")))}u.isMDXComponent=!0}}]);